<UserControl x:Class="QuickChatter.Client.Views.Controls.ucConversation"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:QuickChatter.Client.Behaviors"
             xmlns:local="clr-namespace:QuickChatter.Client.Views.Controls"
             xmlns:converters="clr-namespace:QuickChatter.Client.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Background="#2b2c2e">
    <UserControl.Resources>
        <converters:UsernameToAlignmentConverter x:Key="UsernameToAlignmentConverter" />
        <converters:UsernameToBackgroundConverter x:Key="UsernameToBackgroundConverter" />
        <converters:UsernameToForegroundConverter x:Key="UsernameToForegroundConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <!-- Define the row definitions -->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <!-- First row adjusts to its content -->
            <RowDefinition Height="60" />
            <!-- Second row takes the remaining space -->
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <!-- Define one column spanning the entire width -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Button aligned to the left -->
            <Button HorizontalAlignment="Left" Command="{Binding BackToMenuCommand}" Content="&lt;- back to menu" Foreground="White" Width="100" Height="30" Background="Transparent" BorderThickness="1" BorderBrush="#eb6134" Margin="2,2,0,0">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <!-- Border with animation -->
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="10" />
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Animate the background color -->
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="Red" Duration="0:0:0.3" />
                                            <!-- Animate the border color -->
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                To="#eb6134" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Animate the background back to default -->
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="Transparent" Duration="0:0:0.3" />
                                            <!-- Animate the border back to default -->
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                To="#eb6134" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <!-- Animate the pressed state -->
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                To="#eb6134" Duration="0:0:0.2" />
                                            <ColorAnimation Storyboard.TargetName="border" 
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" 
                                                To="#eb6134" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <!-- TextBlock centered on the screen -->
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" Foreground="White">
                <TextBlock.Text>
                    <Binding Path="SelectedUser.Username" StringFormat="Conversation with {0}" />
                </TextBlock.Text>
            </TextBlock>
        </Grid>


        <ListBox behaviors:ListBoxAutoScrollBehavior.AutoScroll="True" ItemsSource="{Binding ConversationMessages}" BorderThickness="0" Background="Transparent" HorizontalContentAlignment="Stretch" Grid.Row="1">
            <ListBox.Resources>
                <!-- Remove ListBoxItem's hover and selection behavior -->
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </ListBox.Resources>

            <!-- Define how each message is displayed -->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" Margin="5"
                    HorizontalAlignment="{Binding SentBy.Username, Converter={StaticResource UsernameToAlignmentConverter}}">
                        <!-- Chat Bubble -->
                        <TextBlock TextWrapping="Wrap" Foreground="{Binding SentBy.Username, Converter={StaticResource UsernameToBackgroundConverter}}" HorizontalAlignment="{Binding SentBy.Username, Converter={StaticResource UsernameToAlignmentConverter}}" Margin="0, 0, 0, 5">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} ({1:HH:mm})">
                                    <Binding Path="SentBy.Username" />
                                    <Binding Path="SentOn" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Border 
                            Background="{Binding SentBy.Username, Converter={StaticResource UsernameToBackgroundConverter}}"
                            CornerRadius="15" 
                            Padding="10" 
                            MaxWidth="500"
                            HorizontalAlignment="Stretch">
                            <StackPanel>
                                <TextBlock Text="{Binding Message}" TextWrapping="Wrap" 
                                        Foreground="{Binding SentBy.Username, Converter={StaticResource UsernameToForegroundConverter}}" />
                                <Image Source="{Binding Image}" Width="200" Margin="0,10,0,0"
                                    Visibility="{Binding Image, Converter={StaticResource NullToVisibilityConverter}}" />
                            </StackPanel>
                        </Border>

                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <!-- Column 0: 📎 -->
                <ColumnDefinition Width="*" />
                <!-- Column 1: TextBox + Send -->
            </Grid.ColumnDefinitions>

            <!-- 📎 Upload Button -->
            <Button Grid.Column="0"
                Command="{Binding UploadImageCommand}"
                Width="40" Height="40"
                Background="Transparent"
                BorderBrush="#eb6134"
                Foreground="#eb6134"
                BorderThickness="1"
                Margin="10,0,5,0"
                ToolTip="Upload Image"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">
                <TextBlock Text="📎" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center" />
            </Button>

            <!-- TextBox + Send Button in a Grid -->
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <!-- TextBox -->
                    <ColumnDefinition Width="Auto" />
                    <!-- Send Button -->
                </Grid.ColumnDefinitions>

                <!-- Message TextBox -->
                <TextBox Grid.Column="0"
                 Margin="10,0,0,0"
                 Foreground="White"
                 TextWrapping="Wrap"
                 Text="{Binding ConvoMessage, UpdateSourceTrigger=PropertyChanged}"
                 VerticalAlignment="Center"
                 Height="40"
                 Background="Transparent"
                 BorderBrush="#eb6134">
                    <i:Interaction.Behaviors>
                        <behaviors:KeyDownToCommandBehavior
                        Command="{Binding KeyDownCommand}" />
                    </i:Interaction.Behaviors>
                    <TextBox.Template>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4" />
                                <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="4"
                                      Focusable="False"
                                      VerticalScrollBarVisibility="Hidden"
                                      HorizontalScrollBarVisibility="Hidden" />
                            </Grid>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>

                <!-- Send Button -->
                <Button Grid.Column="1"
                Command="{Binding SendConversationMessageCommand}"
                FontFamily="Segoe MDL2 Assets"
                Content="&#xE122;"
                Cursor="Hand"
                FontSize="35"
                Foreground="#eb6134"
                Width="40" Height="40"
                Background="Transparent"
                BorderThickness="0"
                HorizontalAlignment="Left"
                Margin="10,0,0,0">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Grid>

    </Grid>
</UserControl>
